merged_data <- merge(gdp_data, country_data, by= "countryCode")
#Quiz 4, "GETTING AND CLEANING DATA"
url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url, destfile="/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/Quiz_4/idaho.csv", method = "curl")
idaho_data <- read.csv("idaho.csv")
splitNames <- strsplit(names(idaho_data), "wgtp")
url2= "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url2, destfile="/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/Quiz_4/gdp.csv", method = "curl")
gdp_data <-read.csv("gdp.csv", stringsAsFactors=FALSE)
url3= "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv "
download.file(url3, destfile="/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/Quiz_4/country.csv", method = "curl")
country_data <-read.csv("/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/Quiz_4/country.csv", stringsAsFactors=FALSE)
merged_data <- merge(gdp_data, country_data, by= "countryCode")
#Quiz 4, "GETTING AND CLEANING DATA"
url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url, destfile="./Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/Quiz_4/idaho.csv", method = "curl")
idaho_data <- read.csv("idaho.csv")
splitNames <- strsplit(names(idaho_data), "wgtp")
url2= "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url2, destfile="./Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/Quiz_4/gdp.csv", method = "curl")
gdp_data <-read.csv("gdp.csv", stringsAsFactors=FALSE)
url3= "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv "
download.file(url3, destfile="./Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/Quiz_4/country.csv", method = "curl")
country_data <-read.csv("./Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/Quiz_4/country.csv", stringsAsFactors=FALSE)
merged_data <- merge(gdp_data, country_data, by= "countryCode")
#Quiz 4, "GETTING AND CLEANING DATA"
url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url, destfile="./Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/Quiz_4new/idaho.csv", method = "curl")
idaho_data <- read.csv("idaho.csv")
splitNames <- strsplit(names(idaho_data), "wgtp")
url2= "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url2, destfile="./Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/Quiz_4/gdp.csv", method = "curl")
gdp_data <-read.csv("gdp.csv", stringsAsFactors=FALSE)
url3= "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv "
download.file(url3, destfile="./Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/Quiz_4/country.csv", method = "curl")
country_data <-read.csv("./Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/Quiz_4/country.csv", stringsAsFactors=FALSE)
merged_data <- merge(gdp_data, country_data, by= "countryCode")
##Question 5
getwd()
?download.file
#Quiz 4, "GETTING AND CLEANING DATA"
url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url, destfile="./Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/Quiz_4/idaho5.csv", method = "curl")
idaho_data <- read.csv("idaho.csv")
splitNames <- strsplit(names(idaho_data), "wgtp")
url2= "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url2, destfile="./Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/Quiz_4/gdp.csv", method = "curl")
gdp_data <-read.csv("gdp.csv", stringsAsFactors=FALSE)
url3= "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv "
download.file(url3, destfile="./Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/Quiz_4/country.csv", method = "curl")
country_data <-read.csv("./Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/Quiz_4/country.csv", stringsAsFactors=FALSE)
merged_data <- merge(gdp_data, country_data, by= "countryCode")
##Question 5
#Quiz 4, "GETTING AND CLEANING DATA"
url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url, destfile="/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/Quiz_4/idaho5.csv", method = "curl")
#Quiz 4, "GETTING AND CLEANING DATA"
url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url, destfile="/Users//samuelcolon//Documents//Coursera//Getting_and_Cleaning_Data//Quiz_4/newidaho.csv", method = "curl")
idaho_data <- read.csv("newidaho.csv")
splitNames <- strsplit(names(idaho_data), "wgtp")
url2= "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url2, destfile="/Users//samuelcolon//Documents//Coursera//Getting_and_Cleaning_Data//Quiz_4/newgdp.csv", method = "curl")
gdp_data <-read.csv("newgdp.csv", stringsAsFactors=FALSE)
url3= "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv "
download.file(url3, destfile="/Users//samuelcolon//Documents//Coursera//Getting_and_Cleaning_Data//Quiz_4/newcountry.csv", method = "curl")
country_data <-read.csv("/Users//samuelcolon//Documents//Coursera//Getting_and_Cleaning_Data//Quiz_4/newcountry.csv", stringsAsFactors=FALSE)
merged_data <- merge(gdp_data, country_data, by= "countryCode")
View(gdp_data)
View(country_data)
View(country_data)
merged_data <- merge(gdp_data, country_data, by= "CountryCode")
View(gdp_data)
View(country_data)
View(country_data)
?merge
View(country_data)
View(gdp_data)
View(gdp_data)
View(country_data)
View(gdp_data)
View(country_data)
View(gdp_data)
?colnames
colnames(gdp_data) <-c("CountryCode", "GDP_2012")
View(gdp_data)
merged_data <- merge(gdp_data, country_data, by= "CountryCode")
View(merged_data)
?merge
merged_data <- merge(gdp_data, country_data, by= "CountryCode", incomparables = NULL)
gdp_data <- gdp_data[,-3, -6, -7, -8, -9, -10]
gdp_data <- subset(gdp_data, select = -c(3, 6, 7, 8, 9, 10))
View(gdp_data)
colnames(gdp_data) <-c("CountryCode", "GDP_2012", "Full_Name", "Total")
merged_data <- merge(gdp_data, country_data, by= "CountryCode")
View(merged_data)
install.packages("quantmod")
library("quantmod")
amzn = getSymbols("AMZN", auto.assign=FALSE)
sampleTimes= index(amzn)
getSymbols("SPY")
View(SPY)
View(SPY)
?quantmod
#Quiz 4, "GETTING AND CLEANING DATA"
url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url, destfile="/Users//samuelcolon//Documents//Coursera//Getting_and_Cleaning_Data//Quiz_4/newidaho.csv", method = "curl")
idaho_data <- read.csv("newidaho.csv")
splitNames <- strsplit(names(idaho_data), "wgtp")
url2= "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url2, destfile="/Users//samuelcolon//Documents//Coursera//Getting_and_Cleaning_Data//Quiz_4/newgdp.csv", method = "curl")
gdp_data <-read.csv("newgdp.csv", stringsAsFactors=FALSE)
gdp_data <- subset(gdp_data, select = -c(3, 6, 7, 8, 9, 10))
colnames(gdp_data) <-c("CountryCode", "GDP_2012", "Full_Name", "Total")
url3= "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv "
download.file(url3, destfile="/Users//samuelcolon//Documents//Coursera//Getting_and_Cleaning_Data//Quiz_4/newcountry.csv", method = "curl")
country_data <-read.csv("/Users//samuelcolon//Documents//Coursera//Getting_and_Cleaning_Data//Quiz_4/newcountry.csv", stringsAsFactors=FALSE)
merged_data <- merge(gdp_data, country_data, by= "CountryCode")
isUnited <- grepl("^United", dtGDP$Long.Name)
summary(isUnited)
gdp_data <-read.csv("gdp.csv", stringsAsFactors=FALSE)
isUnited <- grepl("^United", dtGDP$Long.Name)
summary(isUnited)
url2= "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url2, destfile="/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/Quiz_4/gdp.csv", method = "curl")
gdp_data <-read.csv("gdp.csv", stringsAsFactors=FALSE)
isUnited <- grepl("^United", dtGDP$Long.Name)
summary(isUnited)
View(gdp_data)
View(gdp_data)
View(gdp_data)
gdp_data <- subset(gdp_data, -c(3, :10))
gdp_data <- subset(gdp_data, -c(3, 6:10))
gdp_data <- subset(gdp_data, select = -c(3, 6:10))
View(gdp_data)
?drop
?delete
?rm
gdp_data <- rm(gdp_data[236:240,])
gdp_data <- rm(gdp_data[-236:240,])
gdp_data <- gdp_data[-236:240,]
gdp_data <- gdp_data[-c(236:240),]
View(gdp_data)
gdp_data <- gdp_data[-c(236:325),]
View(gdp_data)
gdp_data <-read.csv("gdp.csv", stringsAsFactors=FALSE)
View(gdp_data)
gdp_data <- subset(gdp_data, select = -c(3, 6:10))
gdp_data <- gdp_data[-c(195:325),]
View(gdp_data)
gdp_data <- colnames(gdp_data, c("CountryCode", "GDP_Rank", "Full_Name","GDP"))
?colnames
colnames(gdp_data) <- c("CountryCode", "GDP_Rank", "Full_Name","GDP")
View(gdp_data)
?gsub
gdp <- as.numeric(gsub(",", "", gdp_data$GDP))
View(gdp)
##Calculate Mean of Column
mean(gdp_data$GDP, na.rm = TRUE)
mean(gdp, na.rm = TRUE)
isUnited <- grepl("^United", gdp_data$Full_Name)
summary(isUnited)
##Question 4
url1 ="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
url2= "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv "
download.file(url1, destfile= "/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/Quiz_4/gdp.csv", method = "curl")
download.file(url2, destfile="/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/Quiz_4/country.csv", method = "curl")
gdp_data <- read.csv("gdp.csv", stringsAsFactors = FALSE)
country_data <-read.csv("country.csv", stringsAsFactors=FALSE)
gdp_data <- read.csv("gdp.csv", stringsAsFactors = FALSE)
country_data <-read.csv("country.csv", stringsAsFactors=FALSE)
merged_data <- merge(gdp_data, country_data, by= "countryCode")
merged_data <- merge(gdp_data, country_data, by= "CountryCode")
?read.csv
gdp_data <- read.csv("gdp.csv", stringsAsFactors = FALSE, nrows = 195)
gdp_data <- subset(gdp_data, select = -c(3, 6:10))
country_data <-read.csv("country.csv", stringsAsFactors=FALSE)
View(gdp_data)
colnames(gdp_data) <- c("CountryCode", "GDP_Rank", "Full_Name","GDP")
gdp_data <- read.csv("gdp.csv", stringsAsFactors = FALSE, nrows = 195)
gdp_data <- subset(gdp_data, select = -c(3, 6:10))
country_data <-read.csv("country.csv", stringsAsFactors=FALSE)
colnames(gdp_data) <- c("CountryCode", "GDP_Rank", "Full_Name","GDP")
merged_data <- merge(gdp_data, country_data, by= "CountryCode")
View(merged_data)
isUnited <- grepl("^United", gdp_data$Full_Name)
summary(isUnited)
?grepl
?tolower
tolower(OKAY)
View(merged_data)
View(merged_data)
FY <- grepl("Fiscal year end", merged_data$Special.Notes)
print(FY)
June <- grepl("June", merged_data$Special.Notes
)
June
?count
sum(June == "TRUE")
##Question 4
gdp_data <- read.csv("gdp.csv", stringsAsFactors = FALSE, nrows = 195)
gdp_data <- subset(gdp_data, select = -c(3, 6:10))
country_data <-read.csv("country.csv", stringsAsFactors=FALSE)
colnames(gdp_data) <- c("CountryCode", "GDP_Rank", "Full_Name","GDP")
merged_data <- merge(gdp_data, country_data, by= "CountryCode")
FY <- grepl("Fiscal year end", merged_data$Special.Notes)
June <- grepl("June", merged_data$Special.Notes)
##How many where Fiscal Year Ends in June?
sum(June == "TRUE")
?getSymbols
install.packages("quantmod")
library("quantmod")
amzn = getSymbols("AMZN", auto.assign=FALSE)
sampleTimes= index(amzn)
amzn = getSymbols("AMZN", auto.assign=FALSE)
sampleTimes= index(amzn)
View(sampleTimes)
?addmargins
addmargins(table(year(sampleTimes), weekdays(sampleTimes)))
url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url, destfile="/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/Quiz_4/idaho.csv", method = "curl")
idaho_data <- read.csv("idaho.csv")
splitNames <- strsplit(names(idaho_data), "wgtp")
idaho_data <- read.csv("idaho.csv")
splitNames <- strsplit(names(idaho_data), "wgtp")
View(splitNames)
View(idaho_data)
names(idaho_data)
print(splitNames)
tail(splitNames)
x <- "FuckThis"
x
strsplit(x, "This")
?strsplit
splitNames <- strsplit(names(idaho_data), "wgtp")
tail(splitNames)
print(splitNames)
strsplit(x, "This", "Fuck")
splitsNames[[123]]
splitsNames[[123]]
splitNames[[123]]
answer<-which(acs_data$ACR==3 & acs_data$AGS==6)
acs_data <- read.csv("/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/acs.csv", header = TRUE)
url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url, destfile="/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/acs.csv", method = "curl")
acs_data <- read.csv("/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/acs.csv", header = TRUE)
url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url, destfile="/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/Quiz3_/acs.csv", method = "curl")
acs_data <- read.csv("/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/Quiz_3/acs.csv", header = TRUE)
getwd()
setwd("/Users/samuelcolon/Documents/Coursera/Getting_and_Cleaning_Data")
url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url, destfile="/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/Quiz3_/acs.csv", method = "curl")
acs_data <- read.csv("/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/Quiz_3/acs.csv", header = TRUE)
getwd()
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
f <- file.path(getwd(), "acs.csv")
download.file(url, f)
acs_data <- read.csv((f))
f <- file.path(getwd(), "ss06hid.csv")
f
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
url
download.file(url, f)
?download.file
download.file(url, f, method = "curl")
acs_data <- read.csv((f))
View(acs_data)
agricultureLogical<-which(acs_data$ACR==3 & acs_data$AGS==6)
agricultureLogical
agriculturelogical[1:3]
agricultureLogical[1:3]
install.packages("jpeg")
require("jpeg")
jpeg_url <-"https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
jeff<- download.file(jpeg_url, destfile="/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/jeff.jpeg", method = "curl")
read_jeff <- readJPEG("/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/jeff.jpeg", native=TRUE)
answer_2 <- quantile(read_jeff, probs = c(.3, .8))
read_jeff <- readJPEG("/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/jeff.jpeg", native=TRUE)
require("jpeg")
jpeg_url <-"https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
jeff<- download.file(jpeg_url, destfile="/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/jeff.jpeg", method = "curl")
read_jeff <- readJPEG("/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/jeff.jpeg", native=TRUE)
answer_2 <- quantile(read_jeff, probs = c(.3, .8))
jpeg_url <-"https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
jeff<- download.file(jpeg_url, destfile="/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/jeff.jpeg", method = "curl")
jeff<- download.file(jpeg_url, destfile="/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/jeff.jpeg", mode = "wb")
jeff<- download.file(jpeg_url, destfile="/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/jeff.jpg", mode = "wb")
getwd()
jeff<- download.file(jpeg_url, destfile="/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/jeff.jpg", method = "curl")
f <- file.path(getwd(), "jeff.jpg")
jeff<- download.file(jpeg_url, f, method = "curl")
read_jeff <- readJPEG("/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/jeff.jpeg", native=TRUE)
read_jeff <- readJPEG("/Users/samuelcolon/Coursera/Getting_and_Cleaning_Data/jeff.jpg", native=TRUE)
read_jeff <- readJPEG(f, native=TRUE)
answer_2 <- quantile(read_jeff, probs = c(.3, .8))
answer2
answer_2
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f, method = "curl")
gdp_data <- read.csv(f, header = TRUE, stringsAsFactors=FALSE)
View(gdp_data)
url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "edstats.csv")
download.file(url, f, method = "curl")
ed_stats <- read.csv(f, header = TRUE, stringsAsFactors=FALSE)
gdp_data <- read.csv(f, skip = 4, nrows= 215, header = TRUE, stringsAsFactors=FALSE)
View(gdp_data)
View(gdp_data)
?read.csv()
getwd()
gdp_data <- read.csv(f, skip = 4, nrows= 215,stringsAsFactors=FALSE)
View(gdp_data)
View(gdp_data)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f, method = "curl")
gdp_data <- read.csv(f, skip = 4, nrows= 215,stringsAsFactors=FALSE)
View(gdp_data)
url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "edstats.csv")
download.file(url, f, method = "curl")
ed_stats <- read.csv(f, header = TRUE, stringsAsFactors=FALSE)
View(ed_stats)
View(ed_stats)
gdp_data <- read.csv(f, skip = 4, nrows= 215, header = TRUE, stringsAsFactors=FALSE)
View(gdp_data)
View(gdp_data)
download.file(url, f, method = "curl")
gdp_data <- read.csv(f, skip = 4, nrows= 215, header = TRUE, stringsAsFactors=FALSE)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f, method = "curl")
gdp_data <- read.csv(f, skip = 4, nrows= 215, header = TRUE, stringsAsFactors=FALSE)
View(gdp_data)
View(gdp_data)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f, method = "curl")
gdp_data <- read.csv(f, skip = 4, nrows= 215, header = TRUE, stringsAsFactors=FALSE)
View(gdp_data)
View(gdp_data)
gdp_data <- subset(gdp_data, select = -c(3, 6:10))
View(gdp_data)
View(gdp_data)
colnames(gdp_data) <- c("CountryCode", "GDP_Rank", "Full_Name","GDP")
View(gdp_data)
View(gdp_data)
merged <- merge(gdp_data, ed_stats, all = TRUE, by = c("CountryCode"))
View(merged)
merged <- merged[order(GPD_Rank, decreasing=TRUE)]
merged <- merged[order(merged$GPD_Rank, decreasing=TRUE)]
?order
?order
merged <- order(merged$GPD_Rank, decreasing=TRUE)
merged <- order(merged, merged$GPD_Rank, decreasing=TRUE)
merged$GDP_Rank
merged <- order(merged, merged$GPD_Rank, na.last = NA, decreasing=TRUE)
merged <- order(merged$GPD_Rank, na.last = NA, decreasing=TRUE)
merged <- order(merged$GPD_Rank, na.last = TRUE, decreasing=TRUE)
merged <- merged[order(-merged[,2])]
merged <- merged[with(merged, order(merged$GPD_Rank)
)
merged <- merged[with(merged, order(merged$GPD_Rank),]
merged <- merged[with(merged, order(merged$GPD_Rank)),]
class(merged)
merged <- merge(gdp_data, ed_stats, all = TRUE, by = c("CountryCode"))
class(merged)
require(plyr)
?arrange
?arrange
merged <- arrange(merged, desc(GPD_Rank))
merged <- arrange(merged, desc(merged$GPD_Rank))
View(merged)
merged <- arrange(merged, desc(GDP_Rank))
View(merged)
answer <- merged [13, 3]
answer
sum(!is.na(unique(gdp_data$GDP_Rank)))
merged[, mean(GDP_Rank, na.rm=TRUE), by =Income.Group]
merged[, mean(GDP_Rank, na.rm=TRUE), by = merged$Income.Group]
GDP_Rank
merged[, mean(merged$GDP_Rank, na.rm=TRUE), by = merged$Income.Group]
?by
?data.table
require(data.table)
merged[, mean(merged$GDP_Rank, na.rm=TRUE), by = merged$Income.Group]
merged[, mean(GDP_Rank, na.rm=TRUE), by = Income.Group]
merged
merged[, mean(GDP_Rank, na.rm=TRUE), by = Income.Group]
install.packages("data.table")
install.packages("data.table")
merged[, mean(GDP_Rank, na.rm=TRUE), by = Income.Group]
merged <- arrange(merged, Income.Group)
View(merged)
high_income <-merged[, "Income.Group"== "High income: OECD"]
high_income <-merged[, 6 == "High income: OECD"]
View(high_income)
View(high_income)
high_income <-merged[, 6] == "High income: OECD"
high_income
high_income <-merged[, merged$Income.Group == "High Income: OECD"]
high_income <-merged[, merged$Income.Group = "High Income: OECD"]
merged$Income.Group
high_income <-merged[, merged$Income.Group == "High income: OECD"]
high_income <-merged[, merged$Income.Group == High income: OECD]
high_income <-merged[, merged$Income.Group == "High income: OECD"]
?subset()
high_income <- subset(merged, Income.Group == "High income: OECD")
View(high_income)
View(high_income)
mean(high_income[,3])
class(high_income[,3])
mean(is.numeric(high_income[,3]))
is.numeric(high_income[,3])
?numeric
mean(as.numeric(high_income[,3]))
as.numeric(high_income[,3])
high_income[,3]
mean(high_income[,2])
high_nonOECD <- subset(merged, Income.Group == "High income: nonOECD")
View(high_nonOECD)
View(high_nonOECD)
mean(high_nonOECD[,2])
View(high_nonOECD)
View(high_nonOECD)
mean(high_nonOECD[,2], na.rm=TRUE)
merged
quantile(GDP_Rank, probs = seq(0, 1, 0.2), na.rm = TRUE)
quantile(merged$GDP_Rank, probs = seq(0, 1, 0.2), na.rm = TRUE)
gdp_data$quantileGDP <- cut(gdp_data$GDP_Rank, breaks=breaks)
breaks <-quantile(merged$GDP_Rank, probs = seq(0, 1, 0.2), na.rm = TRUE)
gdp_data$quantileGDP <- cut(gdp_data$GDP_Rank, breaks=breaks)
gdp_data
View(gdp_data)
gdp_data[Income.Group == "Lower middle income", .N, by = c("Income.Group", "quantileGDP")]
require(data.table )
gdp_data[Income.Group == "Lower middle income", .N, by = c("Income.Group", "quantileGDP")]
)]
gdp_data[Income.Group == "Lower middle income", .N, by = c("Income.Group", "quantileGDP")]
?data.table
?quantile
View(breaks)
gdp_data$quantileGDP
View(gdp_data$quantileGDP)
gdp_data[Income.Group == "Lower middle income", .N, by = c("Income.Group", "quantileGDP")]
View(gdp_data)
merged$quantileGDP <- cut(gdp_data$GDP_Rank, breaks=breaks)
merged$quantileGDP <- cut(merged$GDP_Rank, breaks=breaks)
View(merged$quantileGDP)
View(merged)
breaks <-quantile(merged$GDP_Rank, probs = seq(0, 1, 0.2), na.rm = TRUE)
merged$quantileGDP <- cut(merged$GDP_Rank, breaks=breaks. na.rm=TRIE)
merged$quantileGDP <- cut(merged$GDP_Rank, breaks=breaks. na.rm=TRUE)
merged$quantileGDP <- cut(merged$GDP_Rank, breaks=breaks, na.rm=TRUE)
View(merged$quantileGDP)
View(merged)
merged_table <- data.table(merged)
breaks <-quantile(merged_table$GDP_Rank, probs = seq(0, 1, 0.2), na.rm = TRUE)
class(merged_table)
View(merged_table)
merged_table <- arrange(merged_table, GDP_Rank)
View(merged_table)
View(merged_table)
merged_table[Income.Group == "Lower middle income", .N, by = c("Income.Group", "quantileGDP")]
?.N
View(breaks)
#Question 5
require(data.table)
merged_table <- data.table(merged)
#Order according to GDP Ranking
merged_table <- arrange(merged_table, GDP_Rank)
#Split into 5 quantiles according to GDP Ranking
breaks <-quantile(merged_table$GDP_Rank, probs = seq(0, 1, 0.2), na.rm = TRUE)
View(breaks)
#Arrange Merged according to quantile grouping
merged_table$quantileGDP <- cut(merged$GDP_Rank, breaks=breaks, na.rm=TRUE)
#Create table showing how many "Lower middle income group" countries fall into each quantile
merged_table[Income.Group == "Lower middle income", .N, by = c("Income.Group", "quantileGDP")]
#Question 5
require(data.table)
#GDP Data--download CSV and put into object gdp_data
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f, method = "curl")
gdp_data <- read.csv(f, skip = 4, nrows= 215, header = TRUE, stringsAsFactors=FALSE)
gdp_data <- subset(gdp_data, select = -c(3, 6:10))
#Change column names
colnames(gdp_data) <- c("CountryCode", "GDP_Rank", "Full_Name","GDP")
#Education Data--download CSV and put into object ed_stats
url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "edstats.csv")
download.file(url, f, method = "curl")
ed_stats <- read.csv(f, header = TRUE, stringsAsFactors=FALSE)
##Merge DataFrames
merged <- merge(gdp_data, ed_stats, all = TRUE, by = c("CountryCode"))
#Order according to GDP Ranking
merged <- arrange(merged, GDP_Rank)
#Split into 5 quantiles according to GDP Ranking
breaks <-quantile(merged$GDP_Rank, probs = seq(0, 1, 0.2), na.rm = TRUE)
View(breaks)
#Arrange Merged according to quantile grouping
merged$quantileGDP <- cut(merged$GDP_Rank, breaks=breaks, na.rm=TRUE)
#Create table showing how many "Lower middle income group" countries fall into each quantile
merged[Income.Group == "Lower middle income", .N, by = c("Income.Group", "quantileGDP")]
merged$quantileGDP <- cut(merged$GDP_Rank, breaks=breaks, na.rm=TRUE)
merged$quantileGDP
merged[Income.Group == "Lower middle income", .N, by = c("Income.Group", "quantileGDP")]
merged <- as.table(merged)
merged <- data.table(merged)
merged[Income.Group == "Lower middle income", .N, by = c("Income.Group", "quantileGDP")]
